#!/usr/bin/env nextflow



// pipeline input parameters                                                                                           

params {
	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// VARIABLES /////////////////////////////////////////////	
	
	// ${projectDir} == "/scicore/home/zavolan/moon0000/SCINPAS/src" (where your main.nf and nextflow is located)
	// .. means go one directory up
	
	folder_template = "${projectDir}/.."
	cpp = "${projectDir}/single_linkage.cpp"

	// initialized empty but it will be overwritten by the nextflow command. (Priority always given to the input command line)
	// i.e. nextflow run main.nf -profile slurm -resume --sample_type "mouse"
	sample_type = ""

	// in the process, it will be concatenated with species and gtf/fasta.
	// e.g. gtf_fasta_location_template/mouse/genes.gtf
	// e.g. gtf_fasta_location_template/mouse/genome.fa
	gtf_fasta_location_template = "${projectDir}/../data/"

	gtf = "genes.gtf"
	genome_fasta = "genome.fa"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// MOUSE DATA /////////////////////////////////////////////	
	mouse_chromosomes = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, "X", "Y"]

	mouse_input_dir = "${projectDir}/../data/mouse/10X*.bam"
	
	mouse_negative_control_dir = "${projectDir}/../data/mouse/*UmiDedup.bam"
	mouse_negative_control_raw = "${projectDir}/../data/mouse/*UmiRaw.bam"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// HUMAN DATA /////////////////////////////////////////////	
	human_chromosomes = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,"X","Y"]

	human_input_dir = "${projectDir}/../data/human/10X*.bam"
	
	human_negative_control_dir = "${projectDir}/../data/human/*UmiDedup.bam"
	human_negative_control_raw = "${projectDir}/../data/human/*UmiRaw.bam"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// common /////////////////////////////////////////////
	
	find_terminal_exons_script = "${projectDir}/find_terminal_exons_nextflow.py"
	find_exons_genes_script = "${projectDir}/get_exons_genes_alter_nextflow.py"
    
	terminal_exons_out = "terminal_exons.bed"
	genes_bed_out = "filtered_genes.bed"
	exons_bed_out = "filtered_exons.bed"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase1 /////////////////////////////////////////////
			
	raw_span = "raw_span"
	dedup_span = "dedup_span"
	split_span = "split_span"
	span_script = "${projectDir}/span_alter_nextflow.py"

	raw_span_hist = "span_distribution_before_dedup.png"
	dedup_span_hist = "span_distribution_after_dedup.png"
	split_span_hist = "span_distribution_after_split.png"

	span_histogram_script = "${projectDir}/span_histogram_alter_nextflow.py"

	dedup_out_name_prefix = "deduplicated_chr"
	split_out_name_prefix = "splitted_chr"
	span_threshold = 5
	dedup_script = "${projectDir}/dedup_nextflow.PY"

	trim_neg_control_script = "${projectDir}/trim_negative_control_nextflow.py"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase2 /////////////////////////////////////////////

	before_hist_out_name = "before_fixing_cleavage_histogram.png"
	after_hist_out_name = "after_fixing_cleavage_histogram.png"

	bam_after_fixation = "fixed_dedup_full.bam"
	fix_softclipped_script = "${projectDir}/fix_softclipped_advanced_nextflow.py"

	out_polyA = "all_polyA_reads_full.bam"
	out_non_polyA = "nonpolyA_reads_full.bam"

	out_polyA_control = "all_polyA_reads_fullControl.bam"
	out_non_polyA_control = "nonpolyA_reads_fullControl.bam"

	//threshold to be polyA
	polyA_percentage_threshold = 80
    length_threshold = 10
 	
	// use fixed cleavage site
	use_fc = 1

	getPolyA_advanced_script = "${projectDir}/get_polyA_reads_advanced_nextflow.py"

	out_pro_intronic_intergenic = "noGX_polyA_reads.bam"
	get_pro_intronic_intergenic_script = "${projectDir}/get_pro_intronic_intergenic_final_nextflow.py"
	
	//name template for 7 different classes of reads (splitted by chromosomes)
	unannotated_in_template = "isolated_reads_above_chr"
	annotated_in_template = "isolated_reads_below_chr"
	intronic_template = "intronic_reads"
	intergenic_template = "intergenic_reads"
	non_polyA_template = "nonpolyA_reads"
	internal_priming_template = "interal_priming_reads"
	polyA_exonic_template = "polyA_exonic_reads"

	//name teamplte for negative contorls (splitted by chromosomes)
	raw_negative_ctrl_template = "RawNegative_ctrl_reads"
	dedup_negative_ctrl_template = "DedupNegative_ctrl_reads"

	//name template for polyA reads including negative control (splitted by chromosomes)
	polyA_with_control_template = "polyA"

	// distance threshold for splitting polyA reads mapping to terminal exons to 2 categories (annotated, unannotated)
	// decided by distance(read, terminal exon) histogram in phase 4
	distance_threshold = 25

	isolate_polyATerminal_script = "${projectDir}/isolate_polyATerminal_nextflow.py"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase3 /////////////////////////////////////////////

	counts_raw = "counts_raw.csv"
	counts_dedup = "counts_dedup.csv"
	counts_nonpolyA = "counts_nonpolyA.csv"
	counts_internal_p = "counts_internal_p.csv"
	counts_polyA = "counts_polyA.csv"
	counts_polyAT = "counts_polyA_terminal.csv"
	counts_intronic = "counts_intronic.csv"
	counts_intergenic = "counts_intergenic.csv"
	counts_exonic = "counts_exonic.csv"
	
	raw_type = "original"
	dedup_type = "deduplicated"
	nonpolyA_type = "nonPolyA"
	internal_p_type = "internalP"
	polyA_type = "allPolyA"
	polyAT_type = "terminal+A"
	intronic_type = "intronic"
	intergenic_type = "intergenic"
	exonic_type = "exonic_A"

	barchart_output = "counts_bar_chart_full.png"
	get_count_script = "${projectDir}/get_count_alter_nextflow.py"
	get_count_split_script = "${projectDir}/split_counts_csv_nextflow.py"
	get_barchart_script = "${projectDir}/get_barchart_nextflow.py"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase4 /////////////////////////////////////////////
	
	// main output. distance csv file. will be used to get histogram of d(read, terminal_exon)
	distance_output = "distances.csv"
	
	combined_negative_control_distance_output = "combined_negative_control_distance.csv"

	get_distance_final_script = "${projectDir}/get_distance_final_advanced_nextflow.py"
	get_histogram_final_script = "${projectDir}/get_histogram_final_advanced_nextflow.py"

	distance_histogram_file_name = "distance_histogram.png"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase5 /////////////////////////////////////////////
	
	//single linkage cluster parameter
	slc_distance_parameter = 4
	
	//ATGC plot output name
	unannotated_ATGC_out = "frequency_plot_unannotated.png"
	annotated_ATGC_out = "frequency_plot_annotated.png"
	intronic_ATGC_out = "frequency_plot_intronic.png"
	intergenic_ATGC_out = "frequency_plot_intergenic.png"
	non_polyA_ATGC_out = "frequency_plot_nonpolyA.png"
	internal_priming_ATGC_out = "frequency_plot_internal_priming.png"
	polyA_exonic_ATGC_out = "frequency_plot_exonic.png"
	
	// number indicates which read type we are dealing with.
	// if 5, it is non_polyA reads
	above_annotated = 5
	below_annotated = 4
	intronic_annotated = 7
	intergenic_annotated = 8
	non_polyA_annotated = 6
	internal_priming_annotated = 9 
	polyA_exonic_annotated = 10

	plot_frequencies_script = "${projectDir}/plot_frequencies_final_nextflow.py"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase6 /////////////////////////////////////////////
	
	motif_search_out_template_annotated = "annotated"
	motif_search_out_template_unannotated = "unannotated"
	motif_search_out_template_nonpolyA = "nonpolyA"
	motif_search_out_template_intergenic = "intergenic"
	motif_search_out_template_intronic = "intronic"
	motif_search_out_template_exonic = "exonic"
	motif_search_out_gtf = "gtf"
	motif_search_out_polyA = "PolyA"

	// # of basepairs you go upstream of the cleavage site
	motif_search_window = 40

	// # of basepairs you go downstream of the cleavage site for motif search
	// if 0, you dont go downstream of the cleavage site
	// if -20, you go 20bp downstream of the cleavage site
	down_limit = -20

	motif_info_dir = "${projectDir}/../data/motives.csv"
	search_motif_script = "${projectDir}/search_motif_advanced_final_nextflow.py"
	
	gtf_search_motif_script = "${projectDir}/search_motif_annotated_alter_nextflow.py"

	motif_order_outname = "combined_motif_orders.csv"
	
	split_motif_order_script = "${projectDir}/split_motif_orders_csv_nextflow.py"

	compute_motif_score_advanced_script = "${projectDir}/compute_score_for_subsetting_advanced_nextflow.py"
	
	combined_motif_scores = "polyA_combined_motif_scores.csv"
	
	total_merged_motif_orders = "total_merged_motif_orders.csv"
	total_merged_motif_scores = "total_merged_motif_scores.csv"

	polyA_motif_score = "polyA_motif_score_barchart.png"
	polyA_motif_score_script = "${projectDir}/get_barchart_polyA_motif_score_nextflow.py"

	sizeSoftclipped_out = "size_softclipped_distribution.png"
	get_softclipped_script = "${projectDir}/get_softclipped_nextflow.py"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase7 /////////////////////////////////////////////

	cluster_threshold = 2
	get_numA_polyA_script = "${projectDir}/get_num_polyA_sites_nextflow.py"
	num_polyA_csv = "num_polyA.csv"
	num_polyA_barchart = "distribution_num_polyA_pergene.png"
	combined_num_polyA_csv = "combined_num_polyA.csv"

	get_barchart_numpolyA_script = "${projectDir}/get_barchart_numpolyA_nextflow.py"
	num_polyA_barchart = "combined_num_polyA_barchart.png"

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////// phase8 /////////////////////////////////////////////
	
	read_count_threshold = 2

	gene_coverage_script = "${projectDir}/get_gene_coverage_alter_nextflow.py"
	dedup_gene_coverage_csv = "dedup_coverage.csv"
	polyA_gene_coverage_csv = "gene_coverage.csv"
	combined_dedup_gene_coverage_csv = "combined_dedup_gene_coverage.csv"
	combined_polyA_gene_coverage_csv = "combined_polyA_gene_coverage.csv"

	total_num_genes_script = "${projectDir}/total_num_genes_nextflow.py"
	total_num_genes_csv = "total_num_genes.csv"
	
	get_barchart_gene_coverage_script = "${projectDir}/get_barchart_gene_coverage_nextflow.py"
	geneCoverage_barchart = "combined_geneCoverage_barchart.png"

}

//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// profiles /////////////////////////////////////////////

profiles {
	slurm{
		executor = "slurm"
		singularity.enabled = true
		singularity.autoMounts = true
	}

	singularity{
		singularity.enabled = true
		singularity.autoMounts = true
	}

	docker{
		docker.enabled = true
	}
}

//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// process /////////////////////////////////////////////

process {
    memory = 80.GB
    cpus = 40
    
    withLabel: "gcc" {
        memory = 5.GB
        cpus = 1
        container = "gcc:latest"
    }

    withLabel: "bash" {
        memory = 5.GB
        cpus = 1
        container = "debian:stable-slim"
    }

    withLabel: "samtools" {
        memory = 60.GB
        cpus = 10
        // this converts from docker to singularity automatically by nextflow
        // original command is: docker pull zavolab/samtools:1.8
        // container = "docker://zavolab/samtools:1.8"
        // container = "biocontainers/samtools:v1.9-4-deb_cv1"
		container = "docker://staphb/samtools:1.15"
    }

    withLabel: "bedtools" {
        container = "biocontainers/bedtools:v2.27.1dfsg-4-deb_cv1"
    }

    withLabel: "custom_python" {
        //currently just  python 3.9.12 . It needs to be extended to contain all dependencies based on python 3.9.12
        container = "docker://zavolab/polcat_python:v1.0.7"
    }

    withLabel: "heavy_computation" {
        memory = 200.GB
        cpus = 60
    }
}
